<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gytlv.base.mapper.TPhotosMapper" >
  <resultMap id="BaseResultMap" type="com.gytlv.base.baseEntity.TPhotos" >
    <result column="id" property="id" jdbcType="VARCHAR" />
    <result column="photoname" property="photoname" jdbcType="VARCHAR" />
    <result column="photosrc" property="photosrc" jdbcType="VARCHAR" />
    <result column="photodescription" property="photodescription" jdbcType="VARCHAR" />
    <result column="userid" property="userid" jdbcType="VARCHAR" />
    <result column="phonetypeid" property="phonetypeid" jdbcType="VARCHAR" />
    <result column="uploadtime" property="uploadtime" jdbcType="TIMESTAMP" />
    <result column="uploadip" property="uploadip" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, photoname, photosrc, photodescription, userid, phonetypeid, uploadtime, uploadip
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.gytlv.base.baseEntity.TPhotosExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_photos
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.gytlv.base.baseEntity.TPhotosExample" >
    delete from t_photos
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gytlv.base.baseEntity.TPhotos" >
    insert into t_photos (id, photoname, photosrc, 
      photodescription, userid, phonetypeid, 
      uploadtime, uploadip)
    values (#{id,jdbcType=VARCHAR}, #{photoname,jdbcType=VARCHAR}, #{photosrc,jdbcType=VARCHAR}, 
      #{photodescription,jdbcType=VARCHAR}, #{userid,jdbcType=VARCHAR}, #{phonetypeid,jdbcType=VARCHAR}, 
      #{uploadtime,jdbcType=TIMESTAMP}, #{uploadip,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.gytlv.base.baseEntity.TPhotos" >
    insert into t_photos
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="photoname != null" >
        photoname,
      </if>
      <if test="photosrc != null" >
        photosrc,
      </if>
      <if test="photodescription != null" >
        photodescription,
      </if>
      <if test="userid != null" >
        userid,
      </if>
      <if test="phonetypeid != null" >
        phonetypeid,
      </if>
      <if test="uploadtime != null" >
        uploadtime,
      </if>
      <if test="uploadip != null" >
        uploadip,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="photoname != null" >
        #{photoname,jdbcType=VARCHAR},
      </if>
      <if test="photosrc != null" >
        #{photosrc,jdbcType=VARCHAR},
      </if>
      <if test="photodescription != null" >
        #{photodescription,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="phonetypeid != null" >
        #{phonetypeid,jdbcType=VARCHAR},
      </if>
      <if test="uploadtime != null" >
        #{uploadtime,jdbcType=TIMESTAMP},
      </if>
      <if test="uploadip != null" >
        #{uploadip,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gytlv.base.baseEntity.TPhotosExample" resultType="java.lang.Integer" >
    select count(*) from t_photos
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_photos
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.photoname != null" >
        photoname = #{record.photoname,jdbcType=VARCHAR},
      </if>
      <if test="record.photosrc != null" >
        photosrc = #{record.photosrc,jdbcType=VARCHAR},
      </if>
      <if test="record.photodescription != null" >
        photodescription = #{record.photodescription,jdbcType=VARCHAR},
      </if>
      <if test="record.userid != null" >
        userid = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.phonetypeid != null" >
        phonetypeid = #{record.phonetypeid,jdbcType=VARCHAR},
      </if>
      <if test="record.uploadtime != null" >
        uploadtime = #{record.uploadtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.uploadip != null" >
        uploadip = #{record.uploadip,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_photos
    set id = #{record.id,jdbcType=VARCHAR},
      photoname = #{record.photoname,jdbcType=VARCHAR},
      photosrc = #{record.photosrc,jdbcType=VARCHAR},
      photodescription = #{record.photodescription,jdbcType=VARCHAR},
      userid = #{record.userid,jdbcType=VARCHAR},
      phonetypeid = #{record.phonetypeid,jdbcType=VARCHAR},
      uploadtime = #{record.uploadtime,jdbcType=TIMESTAMP},
      uploadip = #{record.uploadip,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>